#!/bin/bash

# Script de Prepara√ß√£o para Teste em Ambiente Real
# Execute este script em cada m√°quina da rede local

echo "üîß PREPARANDO M√ÅQUINA PARA TESTE DISTRIBU√çDO"
echo "==========================================="
echo ""

# Cores
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# 1. Compilar projeto
print_info "1. Compilando projeto..."
if ! javac -d out src/distributed/*.java; then
    print_error "Falha na compila√ß√£o!"
    print_warning "Verifique se est√° no diret√≥rio correto: cd ppd-java"
    exit 1
fi
print_success "Compila√ß√£o OK!"

# 2. Descobrir IP da m√°quina
print_info "2. Descobrindo IP da m√°quina..."

if command -v ip >/dev/null 2>&1; then
    # Linux com ip command
    LOCAL_IP=$(ip -4 addr show | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | grep -v '127.0.0.1' | head -1)
elif command -v ifconfig >/dev/null 2>&1; then
    # macOS/Linux com ifconfig
    LOCAL_IP=$(ifconfig | grep "inet " | grep -v 127.0.0.1 | awk '{print $2}' | head -1)
else
    print_warning "Comandos 'ip' e 'ifconfig' n√£o encontrados"
    LOCAL_IP="IP_DESCONHECIDO"
fi

if [[ $LOCAL_IP == "IP_DESCONHECIDO" || -z $LOCAL_IP ]]; then
    print_warning "N√£o foi poss√≠vel descobrir o IP automaticamente"
    print_info "Execute manualmente: ifconfig (Linux/macOS) ou ipconfig (Windows)"
    print_info "Anote o IP e informe para a m√°quina coordenadora"
else
    print_success "IP da m√°quina: $LOCAL_IP"
    print_info "üìù Anote este IP para usar no teste distribu√≠do"
fi

# 3. Verificar se porta est√° livre
print_info "3. Verificando se porta 12345 est√° livre..."
if netstat -an | grep -q ":12345.*LISTEN"; then
    print_warning "Porta 12345 j√° est√° em uso"
    print_info "Execute: pkill -f 'distributed.ReceptorServer' para liberar a porta"
else
    print_success "Porta 12345 est√° livre"
fi

# 4. Iniciar ReceptorServer
print_info "4. Iniciando ReceptorServer..."
print_info "   O servidor ficar√° rodando at√© voc√™ pressionar Ctrl+C"
print_info "   Logs mostrar√£o: [R] Servidor R ouvindo em 0.0.0.0:12345"
echo ""

print_success "üöÄ Iniciando ReceptorServer..."
print_info "üìù Logs esperados:"
print_info "   [R] Servidor R ouvindo em 0.0.0.0:12345"
print_info "   [R] Conex√£o aceita de /192.168.1.XXX:XXXXX"
print_info "   [R] Pedido recebido do cliente /192.168.1.XXX:XXXXX"
echo ""

# Iniciar ReceptorServer
java -cp out distributed.ReceptorServer 0.0.0.0 12345
